syntax = "proto2";

package trader;

// Limit trader configuration.
message LimitTraderConfig {
  // Blending factor for the exponential price smoothing.
  optional float alpha_per_hour = 1;
  // Margin for placing the limit buy order price w.r.t. the smoothed price.
  optional float limit_buy_margin = 2;
  // Margin for placing the limit sell order price w.r.t. the smoothed price.
  optional float limit_sell_margin = 3;
}

// Rebalancing trader configuration.
message RebalancingTraderConfig {
  // Desired security (crypto currency) value to cash value ratio.
  // For example, 1.0 means we want 50% of our portfolio to be in
  // security (crypto currency) and 50% of our portfolio to be in cash.
  optional float alpha = 1;
  // Minimum ratio of the total portfolio value to be traded per order.
  // Orders with lower ratios are not allowed.
  // For example, 0.1 means that every order needs to trade at least 10%
  // of the total portfolio value. This parameter prevents small oders.
  optional float beta = 2;
  // Maximum allowed upper alpha deviation.
  // For example, 0.1 means that the actual security (crypto currency) value to
  // cash value ratio can be at most 1.10 * alpha.
  optional float upper_deviation = 3;
  // Maximum allowed lower alpha deviation.
  // For example, 0.1 means that the actual security (crypto currency) value to
  // cash value ratio must be at least 0.90 * alpha.
  optional float lower_deviation = 4;
}

// Stop trader configuration.
message StopTraderConfig {
  // Margin for setting the stop order price w.r.t. the current price.
  optional float stop_order_margin = 1;
  // Margin for moving the stop order price w.r.t. the current price.
  optional float stop_order_move_margin = 2;
  // Maximum relative stop order price increase per day.
  optional float stop_order_increase_per_day = 3;
  // Maximum relative stop order price decrease per day.
  optional float stop_order_decrease_per_day = 4;
}
